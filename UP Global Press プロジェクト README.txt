
---

# UP Global Press プロジェクト – 開発者向け README

## 1. プロジェクト概要

**UP Global Press** は、企業向けプレスリリース配信サイトとして、最新のニュースや発表情報を国内外に届けることを目的としています。本プロジェクトは HTML、CSS、JavaScript、PHP を用いて実装され、以下の主要機能を備えています。

- **共通コンポーネントの動的読み込み**  
  サイト全体の一貫性を保つため、全ページで共通のヘッダーとフッター（`includes/header.html` と `includes/footer.html`）を `fetch` API で動的に読み込みます。

- **動的プレスリリース表示とフィルタリング**  
  プレスリリースのデータは `releases.js` 内に JSON 配列として管理され、ホームページ、カテゴリー別一覧、全件一覧、詳細ページ、検索結果ページなどで動的に表示およびフィルタリングが実現されています。最新のリリース抽出、日付順ソート、タグ・カテゴリーによる絞り込みなど、ユーザーインタラクションを重視した設計です。

- **CMS 管理機能**  
  管理者およびエディター向けの CMS ログイン（`cms_login.html`）と管理画面（`cms.html`）により、プレスリリースの新規追加、編集、削除、データ出力などの管理作業を行えます。管理画面では：
  - 一覧テーブルの最小化（折りたたみ）機能により、作業領域を広く確保。
  - 編集ボタン押下時に対象リリースのデータがフォームに自動読み込みされ、フォーム領域へスクロールして表示。
  - JSON 出力機能により、現在のリリースデータを容易にバックエンドへ反映またはデバッグ可能。

- **お問い合わせフォームの実装**  
  `contact.html` に設置されたお問い合わせフォームでは、ユーザーから名前、会社情報、連絡先、メッセージを入力して送信でき、入力内容は PHP スクリプト（`send_form.php`）で処理されます。送信が成功すると、`thank_you.html` にリダイレクトし、送信完了メッセージを表示します。

- **検索と高度なフィルタリング機能**  
  `search.html` では、URL パラメータ（例：`?query=キーワード`）に基づく基本検索に加え、チェックボックスでのカテゴリー選択および日付範囲指定による絞り込みが可能です。ユーザーがフィルタを適用すると、該当するプレスリリースがカード形式で動的に表示されます。

---

## 2. ディレクトリ構成

```
project-folder/
├── includes/
│   ├── header.html       # 全ページ共通のヘッダー。ナビゲーション、ロゴ、翻訳ウィジェット、CMS/ログアウトボタンを含む。
│   └── footer.html       # 全ページ共通のフッター。著作権表示やリンク（ホーム、企業概要、プライバシーポリシー、利用規約、コンテンツ基準）を表示。
├── index.html            # ホームページ。ヒーローセクションと最新6件のプレスリリースを動的に表示。
├── about.html            # 企業概要ページ。株式会社UNPLACEDの事業内容、理念、企業情報を紹介。
├── categories.html       # カテゴリー一覧ページ。各カテゴリー（テクノロジー、ビジネス、エンターテインメント、ヘルスケア、環境、スタートアップ、ビューティー、グルメ、その他）をカード形式で表示。
├── category.html         # カテゴリー別プレスリリース表示ページ。URLパラメータで指定されたカテゴリーに基づき、該当するリリースをフィルタリングして表示。
├── release_list.html     # 全件表示ページ。全プレスリリースを最新順にカード形式で一覧表示。
├── detail.html           # プレスリリース詳細ページ。タイトル、公開日、メイン画像、概要、追加セクション、シェアボタン、タグ、戻るリンクを表示。
├── search.html           # 検索結果ページ。キーワード検索と高度なフィルタリング（カテゴリー、日付範囲）機能を実装。
├── contact.html          # お問い合わせページ。各種連絡先情報やメッセージを入力するフォームを設置し、送信後は `send_form.php` で処理後に `thank_you.html` へリダイレクト。
├── terms.html            # 利用規約ページ。利用条件、禁止事項、免責事項、アカウント管理などを詳細に記述。
├── privacy.html          # プライバシーポリシーページ。個人情報の取得、利用目的、第三者提供、セキュリティ対策、保存期間を明示。
├── content_guidelines.html  # コンテンツ基準ページ。プレスリリース掲載に関する基準を詳細に示す。
├── cms_login.html        # CMSログインページ。ID・パスワード認証により、管理者またはエディターとして CMS 管理画面へアクセス。
├── cms.html              # CMS管理画面。プレスリリースの一覧表示、新規追加／編集フォーム、JSON 出力機能、CMS 内検索機能などを提供。
├── thank_you.html        # お問い合わせ完了ページ。送信完了メッセージとトップページへのリンクを提供。
├── styles.css            # CSS スタイルシート。Google Fonts、カラーパレット、各種コンポーネントのスタイルを定義。
├── releases.js           # プレスリリースデータと動的機能の JavaScript ファイル。データ操作、フィルタリング、DOM 挿入処理を実装。
└── send_form.php         # サーバーサイド PHP スクリプト。お問い合わせフォームのデータ受信、検証、送信（メール送信やデータ保存）の処理を担当。
```

---

## 3. 各ページおよびコンポーネントの詳細

### 3.1 共通コンポーネント

#### includes/header.html
- **機能と構成**:
  - **ロゴとナビゲーション**: 「UP Global Press」ロゴと、ホーム、カテゴリー、プレスリリース一覧、お問い合わせなどの主要リンクを配置。
  - **翻訳ウィジェット**: Google Translate を利用し、ページの言語を日本語、英語、ベンガル語に切替可能。
  - **CMS/ログアウトボタン**: 管理者ログイン時には CMS へのアクセスリンクとログアウト機能を表示。
  - **検索バー**: PCおよびモバイル向けの検索入力欄とボタンを配置し、ユーザーがキーワードによるサイト内検索を実行できるようにする。

#### includes/footer.html
- **機能と構成**:
  - **著作権表示**: 例「© 2025 UP Global Press」など。
  - **フッターナビゲーション**: ホーム、企業概要、プライバシーポリシー、利用規約、コンテンツ基準などのリンクを含む。

---

### 3.2 コンテンツページ

#### index.html (ホームページ)
- **主要機能**:
  - **ヒーローセクション**: 大きな背景画像（ぼかし・固定背景効果付き）とキャッチコピーにより、第一印象を強く演出。
  - **最新プレスリリース**: `releases.js` のデータから最新6件を抽出し、カード形式で画像、タイトル、公開日、概要、タグを表示。クリックすると詳細ページへ遷移。
  - **共通コンポーネントの動的読み込み**: JavaScript の `fetch` によるヘッダーとフッターの非同期読み込みを実施。

#### about.html (企業概要)
- **主要機能**:
  - 企業の理念、事業内容（プレスリリース配信、バングラディシュ人材紹介、サステナブル素材プロダクト販売）を詳細に説明。
  - スタイリングが専用セクションに適用され、読みやすくデザインされています。

#### categories.html (カテゴリー一覧)
- **主要機能**:
  - 各カテゴリー（例：テクノロジー、ビジネス、エンターテインメント、など）をカード形式で一覧表示。
  - 各カードには画像、カテゴリー名、簡単な説明が含まれ、クリック時に `category.html` へ遷移し、該当カテゴリーのリリースを表示。

#### category.html (カテゴリー別表示)
- **主要機能**:
  - URL パラメータ（例：`?name=テクノロジー`）に基づいて、`releases.js` のデータから該当するカテゴリーをフィルタリングし、最新順にソートした結果をカード形式で表示。

#### release_list.html (全件一覧)
- **主要機能**:
  - 全プレスリリースを最新順にカード形式で一覧表示。各カードはタイトル、公開日、概要、画像、タグ情報を含む。

#### detail.html (詳細ページ)
- **主要機能**:
  - URL パラメータ（例：`?id=3`）に基づき、選択されたプレスリリースの詳細情報を表示。
  - **表示内容**:
    - **メイン画像**: タイトルの前に大きく表示。
    - **タイトル、公開日、概要**: 基本情報として表示。
    - **追加セクション**: リッチテキスト（HTML）形式の本文および必要に応じた画像を、複数セクションとして動的に挿入。
    - **シェアボタン**: Facebook、Twitter、LinkedIn へのシェア用リンクを、現在のページ URL とタイトルを元に設定。
    - **タグ表示**と **戻るリンク**: 関連タグの表示と、一覧ページへの遷移をサポート。

#### search.html (検索結果)
- **主要機能**:
  - URL パラメータ（例：`?query=キーワード`）を用いた基本検索と、入力キーワードに基づく結果表示。
  - **高度なフィルタリングパネル**:
    - **カテゴリーフィルタ**: 複数選択可能なチェックボックスで、リリースのタグと照合して結果を絞り込む。
    - **日付範囲フィルタ**: 開始日と終了日を指定して、リリースの公開日で絞り込み。
  - 検索結果はカード形式で動的に表示され、該当する結果がない場合は適切なメッセージを表示。

#### contact.html (お問い合わせ)
- **主要機能**:
  - ユーザーが名前、会社名、会社HP、メールアドレス、電話番号、お問い合わせ内容を入力するフォームを提供。
  - 利用規約およびプライバシーポリシーへの同意チェックボックス（必須）を含む。
  - フォーム送信時、JavaScript によってデータが PHP スクリプト（`send_form.php`）へ POST 送信され、成功時は `thank_you.html` にリダイレクト。

#### terms.html / privacy.html / content_guidelines.html
- **主要機能**:
  - サイト利用に関する各種ルールや方針（利用規約、プライバシーポリシー、コンテンツ基準）を詳細に記述し、ユーザーや企業が遵守すべき事項を明示。

---

### 3.3 CMS 関連機能

#### cms_login.html (CMS ログイン)
- **主要機能**:
  - 管理者およびエディター向けのログインフォームを提供。入力された ID とパスワードが正しければ、ローカルストレージに `cmsRole`（例："admin" または "editor"）を保存し、`cms.html` へリダイレクトします。

#### cms.html (CMS 管理画面)
- **主要機能**:
  - **一覧テーブル**:
    - プレスリリースの一覧をテーブル形式で表示（ID、タイトル、公開日、編集ボタン）。
    - 管理者向けに最小化（折りたたみ）機能が実装され、トグルボタンでテーブルの表示/非表示が切り替え可能です。
  - **新規追加／編集フォーム**:
    - リリースの各項目（ID、タイトル、日付、概要、画像 URL、タグ、追加タグ）を入力するフィールドを提供。
    - **コンテンツセクション**: 最大3セットまで追加可能。各セクションは Quill エディタによりリッチテキスト入力が可能で、画像 URL の指定フィールドも備えています。
    - 編集ボタン押下時には、該当リリースのデータがフォームに自動ロードされ、`scrollIntoView()` を用いてフォーム領域へ自動スクロールします。
  - **JSON 出力機能**:
    - 「Generate JSON」ボタンで、現在のリリースデータが JSON 形式（`var releasesData = ...`）としてテキストエリアに出力され、バックエンド更新やデバッグが容易になります。
  - **CMS 内検索機能**:
    - 管理者向けに、一覧テーブル内でタイトルを基に検索・フィルタリングできる機能を実装。

---

### 3.4 スタイルとスクリプト

#### styles.css
- **機能と特徴**:
  - Google Fonts（Poppins、Noto Sans Bengali）とカラーパレット（プライマリ、セカンダリ、アクセント、ハイライトカラー）を定義。
  - ヘッダー、フッター、ヒーローセクション、カード、フォーム、ボタンなど、各コンポーネントに対して詳細なスタイルを指定。
  - レスポンシブ対応として、メディアクエリを使用し、モバイルおよびタブレットでの表示最適化を実現。

#### releases.js
- **機能と特徴**:
  - プレスリリースのデータを JSON 配列として一元管理し、各ページで共通に参照。
  - ホーム、カテゴリー別一覧、全件一覧、詳細ページ、検索結果ページにおいて、データのソート、フィルタリング、DOM への動的挿入処理を実装。
  - 検索ページでは、キーワード、カテゴリー、日付範囲に基づく複雑なフィルタリングロジックが含まれています。

#### send_form.php
- **機能と特徴**:
  - お問い合わせフォームから送信されたデータを受け取り、メール送信および必要に応じたデータ保存を行います。
  - 入力検証、エラーハンドリング、CSRF 対策など、セキュリティ対策を十分に実装することが求められます。
  - 処理完了後、成功時は `thank_you.html` にリダイレクトします。

---

## 4. 開発者向け注意事項

- **共通コンポーネントの一元管理**  
  ヘッダーおよびフッターは `includes/` 以下に配置しているため、サイト全体の共通部分の変更はこれらのファイルのみ更新することで反映されます。

- **データ構造とフィルタリング**  
  プレスリリースデータは `releases.js` に定義されており、データ構造の変更時は各ページ（フィルタリング、詳細表示、検索処理など）での参照方法を再確認してください。

- **CMS ユーザビリティ**  
  管理画面の一覧テーブルの最小化機能や、編集ボタン押下時の自動スクロール処理は、ユーザーの作業効率向上を目的として設計されています。該当する JavaScript の実装箇所や、DOM 操作の流れを確認することを推奨します。

- **セキュリティ対策の徹底**  
  お問い合わせフォームや CMS ログインに関しては、入力バリデーション、権限管理、CSRF 対策など、サーバーサイドおよびクライアントサイドでのセキュリティ対策を十分に実施してください。

- **レスポンシブデザインのテスト**  
  `styles.css` により各ページはレスポンシブに設計されています。特にナビゲーションの折りたたみ、検索バー、カードレイアウトなど、モバイルやタブレットでの表示確認を行ってください。

- **外部依存リソースの管理**  
  Google Fonts、Google Translate、Quill.js などの外部リソースを利用しているため、ネットワーク環境や CDN の稼働状況にも注意し、必要に応じてローカルコピーの導入を検討してください。

- **バージョン管理とデプロイ**  
  Git などのバージョン管理システムを利用して、変更履歴をしっかり管理してください。変更内容はステージング環境で動作確認を行った後、本番環境にデプロイするようにしましょう。

---

## 5. セットアップ手順

1. **ファイル配置**  
   - プロジェクトフォルダー内の全ファイルおよびディレクトリを Web サーバーの公開ディレクトリに配置します。

2. **PHP 環境のセットアップ**  
   - `send_form.php` の実行には、Apache や Nginx＋PHP-FPM など、PHP が動作する環境を準備してください。

3. **外部リソースの確認**  
   - Google Fonts、Google Translate、Quill.js など、各外部リソースへのアクセスが正常に動作するか確認してください。

4. **動作確認**  
   - 各ページ（ホーム、企業概要、カテゴリー一覧、詳細、検索、CMS、お問い合わせなど）の動作、特に動的データ表示、フィルタリング、CMS の一覧テーブルの最小化・自動スクロール、送信処理などのユーザーインタラクションを十分にテストしてください。

5. **バージョン管理と本番デプロイ**  
   - Git 等を用いてコードの変更履歴を管理し、十分なテスト後に本番環境へデプロイしてください。

---

この README は、プロジェクトの各コンポーネントの役割や機能、ユーザーインタラクション、セキュリティおよびデプロイに関する注意点などを詳細に記述しています。開発および運用に際して、各項目を十分に確認し、適宜改善・更新を行ってください。